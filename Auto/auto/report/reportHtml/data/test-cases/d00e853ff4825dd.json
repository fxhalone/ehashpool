{
  "uid" : "d00e853ff4825dd",
  "name" : "test_minerSetting",
  "fullName" : "testcase.test_ehashpool.test_ehashpool#test_minerSetting",
  "historyId" : "728c4b576a798dd7e176f77cbb5c4da6",
  "time" : {
    "start" : 1663561298668,
    "stop" : 1663561298951,
    "duration" : 283
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 300 == 200\n +  where 300 = int(300)",
  "statusTrace" : "self = <test_ehashpool.test_ehashpool object at 0x7f8e3f975110>\n\n    @allure.epic(\"EhashPool\")\n    @allure.feature(\"minerSetting\")\n    def test_minerSetting(self):\n        RP_Token = ''\n        with allure.step('step1:login'):\n>           RP_Token = self.login()  # 登陆\n\ntestcase/test_ehashpool.py:1340: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_ehashpool.test_ehashpool object at 0x7f8e3f975110>\nverifyCode = '0', GACode = 0\n\n    def login(self,verifyCode='0',GACode=0):\n        allure.attach(\"<h1>\" + OLD_EHASHPOOL_ADDRESS+LOGIN + \"</h1>\", name='url',attachment_type=allure.attachment_type.HTML)\n        allure.attach(\"<h1>POST</h1>\", name='method', attachment_type=allure.attachment_type.HTML)\n        allure.attach(\"<h1>\" + str(headers) + \"</h1>\", name='headers', attachment_type=allure.attachment_type.HTML)\n    \n        data = {\n            \"email\": EMAIL,\n            \"password\": ACCOUNT_PASSWORD,\n            # \"email\": '369959466@qq.com',\n            # \"password\": ACCOUNT_PASSWORD,\n            \"GACode\": GACode,\n            \"verifyCode\": verifyCode\n        }\n    \n    \n        dataJson = json.JSONEncoder().encode(data)\n        allure.attach(\"<h1>\" + str(data) + \"</h1>\", name='requestData', attachment_type=allure.attachment_type.HTML)\n        response = requests.post(url=OLD_EHASHPOOL_ADDRESS + LOGIN, headers=headers, data=dataJson)\n        allure.attach(\"<h1>\" + str(response.json()) + \"</h1>\", name='responseData',\n                      attachment_type=allure.attachment_type.HTML)\n    \n>       assert int(response.json()['code']) == 200\nE       assert 300 == 200\nE        +  where 300 = int(300)\n\ntestcase/test_ehashpool.py:127: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_xunit_setup_class_fixture_test_ehashpool",
    "time" : {
      "start" : 1663561298666,
      "stop" : 1663561298666,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 300 == 200\n +  where 300 = int(300)",
    "statusTrace" : "self = <test_ehashpool.test_ehashpool object at 0x7f8e3f975110>\n\n    @allure.epic(\"EhashPool\")\n    @allure.feature(\"minerSetting\")\n    def test_minerSetting(self):\n        RP_Token = ''\n        with allure.step('step1:login'):\n>           RP_Token = self.login()  # 登陆\n\ntestcase/test_ehashpool.py:1340: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_ehashpool.test_ehashpool object at 0x7f8e3f975110>\nverifyCode = '0', GACode = 0\n\n    def login(self,verifyCode='0',GACode=0):\n        allure.attach(\"<h1>\" + OLD_EHASHPOOL_ADDRESS+LOGIN + \"</h1>\", name='url',attachment_type=allure.attachment_type.HTML)\n        allure.attach(\"<h1>POST</h1>\", name='method', attachment_type=allure.attachment_type.HTML)\n        allure.attach(\"<h1>\" + str(headers) + \"</h1>\", name='headers', attachment_type=allure.attachment_type.HTML)\n    \n        data = {\n            \"email\": EMAIL,\n            \"password\": ACCOUNT_PASSWORD,\n            # \"email\": '369959466@qq.com',\n            # \"password\": ACCOUNT_PASSWORD,\n            \"GACode\": GACode,\n            \"verifyCode\": verifyCode\n        }\n    \n    \n        dataJson = json.JSONEncoder().encode(data)\n        allure.attach(\"<h1>\" + str(data) + \"</h1>\", name='requestData', attachment_type=allure.attachment_type.HTML)\n        response = requests.post(url=OLD_EHASHPOOL_ADDRESS + LOGIN, headers=headers, data=dataJson)\n        allure.attach(\"<h1>\" + str(response.json()) + \"</h1>\", name='responseData',\n                      attachment_type=allure.attachment_type.HTML)\n    \n>       assert int(response.json()['code']) == 200\nE       assert 300 == 200\nE        +  where 300 = int(300)\n\ntestcase/test_ehashpool.py:127: AssertionError",
    "steps" : [ {
      "name" : "step1:login",
      "time" : {
        "start" : 1663561298668,
        "stop" : 1663561298950,
        "duration" : 282
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 300 == 200\n +  where 300 = int(300)\n",
      "statusTrace" : "  File \"/Users/fengxiaohui/PycharmProjects/ehashpool/Auto/auto/testcase/test_ehashpool.py\", line 1340, in test_minerSetting\n    RP_Token = self.login()  # 登陆\n  File \"/Users/fengxiaohui/PycharmProjects/ehashpool/Auto/auto/testcase/test_ehashpool.py\", line 127, in login\n    assert int(response.json()['code']) == 200\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "cf5546c75bb4ce31",
        "name" : "url",
        "source" : "cf5546c75bb4ce31.html",
        "type" : "text/html",
        "size" : 68
      }, {
        "uid" : "2988915511bcf2e2",
        "name" : "method",
        "source" : "2988915511bcf2e2.html",
        "type" : "text/html",
        "size" : 13
      }, {
        "uid" : "3d3534e47c6fb113",
        "name" : "headers",
        "source" : "3d3534e47c6fb113.html",
        "type" : "text/html",
        "size" : 75
      }, {
        "uid" : "4bb711018a023f33",
        "name" : "requestData",
        "source" : "4bb711018a023f33.html",
        "type" : "text/html",
        "size" : 95
      }, {
        "uid" : "759cde8dbac1dce1",
        "name" : "responseData",
        "source" : "759cde8dbac1dce1.html",
        "type" : "text/html",
        "size" : 84
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 5,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 5,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_class_fixture_test_ehashpool::0",
    "time" : {
      "start" : 1663561299111,
      "stop" : 1663561299111,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "minerSetting"
  }, {
    "name" : "epic",
    "value" : "EhashPool"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_ehashpool"
  }, {
    "name" : "subSuite",
    "value" : "test_ehashpool"
  }, {
    "name" : "host",
    "value" : "fengxiaohuideMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "37580-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_ehashpool"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d00e853ff4825dd.json",
  "parameterValues" : [ ]
}